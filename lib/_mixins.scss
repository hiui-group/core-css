// Author: Sivan[sunxingfan@xiaomi.com]
// Description: define mix-ins, functions etc.

@import 'common';

@function use-color($color-name: '') {
  @return var(--color#{if($color-name != '', '-' + $color-name, null)});
}

@function hex-to-hsl($color) {
  @return hue($color), saturation($color), lightness($color);
}

// Clear float
@mixin clearfix() {
  &::before,
  &::after {
    content: '';
    display: table;
  }

  &::after {
    clear: both;
  }
}

// Image Replacement
@mixin hide-text() {
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

// Get CSS variables
@mixin get-variable($color-palette: $palette-hiui) {
  --color-primary: #{get-color($color-palette, '50')};
  --color-primary-h: #{hue(get-color($color-palette, '50'))};
  --color-primary-s: #{saturation(get-color($color-palette, '50'))};
  --color-primary-l: #{lightness(get-color($color-palette, '50'))};
  --color-primary-hsl: #{var(--color-primary-h), var(--color-primary-s), var(--color-primary-l)};
  --color-primary-10: #{get-color($color-palette, '10')};
  --color-primary-20: #{get-color($color-palette, '20')};
  --color-primary-30: #{get-color($color-palette, '30')};
  --color-primary-40: #{get-color($color-palette, '40')};
  --color-primary-60: #{get-color($color-palette, '60')};
  --color-primary-70: #{get-color($color-palette, '70')};
  --color-primary-80: #{get-color($color-palette, '80')};
  --color-primary-90: #{get-color($color-palette, '90')};
  --color-primary-g50: #{get-color($color-palette, 'g50')};
  --color-primary-g60: #{get-color($color-palette, 'g60')};
  --color-primary-g70: #{get-color($color-palette, 'g70')};
  --color-primary-g80: #{get-color($color-palette, 'g80')};
  --color-primary-g90: #{get-color($color-palette, 'g90')};
  --color-primary-g100: #{get-color($color-palette, 'g100')};
  --color-black: #{get-color($palette-tertiary, 'black')};
  --color-gray-darker: #{get-color($palette-tertiary, 'gray-darker')};
  --color-gray-dark: #{get-color($palette-tertiary, 'gray-dark')};
  --color-gray: #{get-color($palette-tertiary, 'gray')};
  --color-gray-light: #{get-color($palette-tertiary, 'gray-light')};
  --color-gray-lighter: #{get-color($palette-tertiary, 'gray-lighter')};
  --color-white: #{get-color($palette-tertiary, 'white')};
}

// Isolate component style
// block elements reset: margin, padding, text style, <ul>, <ol>
// inline-block elements reset: margin, padding, text style
// inline elements reset:
@mixin isolation($display-outside: block, $display-inside: flow-root) {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0;

  // equal to `display: inline`
  @if ($display-outside != inline and $display-inside != flow) {
    font: normal $font-weight-normal #{$font-size-normal}/#{$line-height-size-normal} $font-family-sans;
    text-align: left;
    text-decoration: none;
    text-indent: 0;
    text-shadow: none;
    text-transform: none;
    letter-spacing: 0;
    word-spacing: normal;
    white-space: normal;
    color: use-color(black);
  }
}
